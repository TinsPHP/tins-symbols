/* 
 * This file is part of the TinsPHP project published under the Apache License 2.0
 * For the full copyright and license information, please have a look at LICENSE in the
 * root folder or visit the project's website http://tsphp.ch/wiki/display/TINS/License
 */

package ch.tsphp.tinsphp.symbols.gen;

/**
 * This class contains all token types specified by TinsPHP's parser.
 *
 * Do not change this class, it is automatically generated and your changes would be lost with the next update.
 * If you want to change some tokens then be invited to do it directly in the grammar file of the parser (TinsPHP.g)
 */
 public class TokenTypes{

    public static int LogicXorWeak = 4;
    public static int LogicOrWeak = 5;
    public static int LogicAndWeak = 6;
    public static int Assign = 7;
    public static int BitwiseAndAssign = 8;
    public static int BitwiseOrAssign = 9;
    public static int BitwiseXorAssign = 10;
    public static int PlusAssign = 11;
    public static int MinusAssign = 12;
    public static int DotAssign = 13;
    public static int MultiplyAssign = 14;
    public static int DivideAssign = 15;
    public static int ModuloAssign = 16;
    public static int ShiftLeftAssign = 17;
    public static int ShiftRightAssign = 18;
    public static int CAST_ASSIGN = 19;
    public static int QuestionMark = 20;
    public static int LogicOr = 21;
    public static int LogicAnd = 22;
    public static int BitwiseOr = 23;
    public static int BitwiseXor = 24;
    public static int BitwiseAnd = 25;
    public static int Equal = 26;
    public static int Identical = 27;
    public static int NotEqual = 28;
    public static int NotIdentical = 29;
    public static int GreaterEqualThan = 30;
    public static int GreaterThan = 31;
    public static int LessEqualThan = 32;
    public static int LessThan = 33;
    public static int ShiftLeft = 34;
    public static int ShiftRight = 35;
    public static int Minus = 36;
    public static int Plus = 37;
    public static int Dot = 38;
    public static int Multiply = 39;
    public static int Divide = 40;
    public static int Modulo = 41;
    public static int Instanceof = 42;
    public static int CAST = 43;
    public static int PRE_DECREMENT = 44;
    public static int PRE_INCREMENT = 45;
    public static int At = 46;
    public static int BitwiseNot = 47;
    public static int LogicNot = 48;
    public static int UNARY_MINUS = 49;
    public static int UNARY_PLUS = 50;
    public static int New = 51;
    public static int Clone = 52;
    public static int POST_DECREMENT = 53;
    public static int POST_INCREMENT = 54;
    public static int ARRAY_ACCESS = 55;
    public static int FIELD_ACCESS = 56;
    public static int CLASS_STATIC_ACCESS = 57;
    public static int FUNCTION_CALL = 58;
    public static int METHOD_CALL = 59;
    public static int METHOD_CALL_POSTFIX = 60;
    public static int METHOD_CALL_STATIC = 61;
    public static int Exit = 62;
    public static int Bool = 63;
    public static int Int = 64;
    public static int Float = 65;
    public static int String = 66;
    public static int TypeArray = 67;
    public static int Null = 68;
    public static int This = 69;
    public static int CONSTANT = 70;
    public static int ACTUAL_PARAMETERS = 71;
    public static int Abstract = 72;
    public static int Arrow = 73;
    public static int As = 74;
    public static int BINARY = 75;
    public static int BLOCK = 76;
    public static int BLOCK_CONDITIONAL = 77;
    public static int Backslash = 78;
    public static int Break = 79;
    public static int CLASS_BODY = 80;
    public static int CLASS_MODIFIER = 81;
    public static int CLASS_STATIC_ACCESS_VARIABLE_ID = 82;
    public static int CONSTANT_DECLARATION = 83;
    public static int CONSTANT_DECLARATION_LIST = 84;
    public static int Case = 85;
    public static int Cast = 86;
    public static int Catch = 87;
    public static int Class = 88;
    public static int Colon = 89;
    public static int Comma = 90;
    public static int Comment = 91;
    public static int Const = 92;
    public static int Construct = 93;
    public static int Continue = 94;
    public static int DECIMAL = 95;
    public static int DEFAULT_NAMESPACE = 96;
    public static int Default = 97;
    public static int Destruct = 98;
    public static int Do = 99;
    public static int Dollar = 100;
    public static int DoubleColon = 101;
    public static int EXPONENT = 102;
    public static int EXPRESSION = 103;
    public static int EXPRESSION_LIST = 104;
    public static int Echo = 105;
    public static int Else = 106;
    public static int Extends = 107;
    public static int FIELD = 108;
    public static int FIELD_MODIFIER = 109;
    public static int FUNCTION_MODIFIER = 110;
    public static int Final = 111;
    public static int For = 112;
    public static int Foreach = 113;
    public static int Function = 114;
    public static int HEXADECIMAL = 115;
    public static int INTERFACE_BODY = 116;
    public static int Identifier = 117;
    public static int If = 118;
    public static int Implements = 119;
    public static int Interface = 120;
    public static int LeftCurlyBrace = 121;
    public static int LeftParenthesis = 122;
    public static int LeftSquareBrace = 123;
    public static int METHOD_DECLARATION = 124;
    public static int METHOD_MODIFIER = 125;
    public static int MinusMinus = 126;
    public static int NAMESPACE_BODY = 127;
    public static int Namespace = 128;
    public static int NotEqualAlternative = 129;
    public static int OCTAL = 130;
    public static int ObjectOperator = 131;
    public static int PARAMETER_DECLARATION = 132;
    public static int PARAMETER_LIST = 133;
    public static int PARAMETER_TYPE = 134;
    public static int Parent = 135;
    public static int ParentColonColon = 136;
    public static int PlusPlus = 137;
    public static int Private = 138;
    public static int ProtectThis = 139;
    public static int Protected = 140;
    public static int Public = 141;
    public static int Return = 142;
    public static int RightCurlyBrace = 143;
    public static int RightParenthesis = 144;
    public static int RightSquareBrace = 145;
    public static int STRING_DOUBLE_QUOTED = 146;
    public static int STRING_SINGLE_QUOTED = 147;
    public static int SWITCH_CASES = 148;
    public static int Self = 149;
    public static int SelfColonColon = 150;
    public static int Semicolon = 151;
    public static int Static = 152;
    public static int Switch = 153;
    public static int TYPE = 154;
    public static int TYPE_MODIFIER = 155;
    public static int TYPE_NAME = 156;
    public static int Throw = 157;
    public static int Try = 158;
    public static int TypeAliasBool = 159;
    public static int TypeAliasFloat = 160;
    public static int TypeAliasFloat2 = 161;
    public static int TypeAliasInt = 162;
    public static int TypeBool = 163;
    public static int TypeFloat = 164;
    public static int TypeInt = 165;
    public static int TypeMixed = 166;
    public static int TypeObject = 167;
    public static int TypeResource = 168;
    public static int TypeString = 169;
    public static int USE_DECLARATION = 170;
    public static int Use = 171;
    public static int VARIABLE_DECLARATION = 172;
    public static int VARIABLE_DECLARATION_LIST = 173;
    public static int VariableId = 174;
    public static int Void = 175;
    public static int While = 176;
    public static int Whitespace = 177;
}